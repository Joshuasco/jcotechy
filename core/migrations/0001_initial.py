# Generated by Django 4.1.5 on 2023-02-21 10:22

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('keywords', models.CharField(blank=True, max_length=25, null=True)),
                ('short_description', models.CharField(default='', max_length=225)),
                ('slug', models.SlugField(unique=True)),
                ('content', tinymce.models.HTMLField(default='')),
                ('url', models.URLField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('scheduled_on', models.DateTimeField(default=datetime.datetime.now)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=350)),
                ('answer', models.TextField()),
                ('published', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Faq',
                'verbose_name_plural': 'Faqs',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slug', models.SlugField(default='y')),
                ('keywords', models.CharField(blank=True, max_length=25, null=True)),
                ('short_description', models.CharField(default='', max_length=225)),
                ('description', tinymce.models.HTMLField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('service', models.CharField(default='software in web development', max_length=150)),
                ('upload_file', models.FileField(blank=True, help_text="file form must be 'pdf', 'doc' or'txt' ", null=True, upload_to='core/quote/files', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'txt'])])),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('completed', 'completed'), ('in progress', 'in progress'), ('canceled', 'canceled'), ('accepted', 'accepted'), ('requested', 'requested')], default='requested', max_length=12)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('svg_img', models.FileField(blank=True, help_text='copy and paste the svg image code here', null=True, upload_to='core/service/svg_img', validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'svg'])])),
                ('title', models.CharField(max_length=150)),
                ('keywords', models.CharField(default='', help_text='enter comma separated words', max_length=50)),
                ('short_description', models.CharField(default='', max_length=225)),
                ('slug', models.SlugField()),
                ('content', tinymce.models.HTMLField()),
                ('published', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('is_subscriber', models.BooleanField(default=True)),
                ('verified_email', models.BooleanField(default=False)),
                ('subcribed_on', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'verbose_name': 'subscriber',
                'verbose_name_plural': 'subscribers',
                'ordering': ('-subcribed_on',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('published', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_review', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='core/portfolio/images')),
                ('alt_text', models.CharField(default='image', help_text='enter an alternate text for this image', max_length=50)),
                ('keywords', models.CharField(default='', help_text='enter comma separated words', max_length=50)),
                ('short_description', models.CharField(default='', max_length=225)),
                ('video', models.FileField(blank=True, null=True, upload_to='core/portfolio/videos')),
                ('title', models.CharField(max_length=150)),
                ('content', tinymce.models.HTMLField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
                ('review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_review', to='core.review')),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolios',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='', max_length=25)),
                ('salary', models.CharField(default='Negotiable', max_length=10)),
                ('job_type', models.CharField(choices=[('full time', 'Full Time'), ('Part Time / B2B Contract', 'Part Time / B2B Contract')], default="'Part Time / B2B Contract'", max_length=24)),
                ('location', models.CharField(default='Remotely', max_length=300)),
                ('details', tinymce.models.HTMLField(default='', help_text='should contain job description and skils required')),
                ('portfolio_url', models.URLField(blank=True, help_text='enter link to your portfolio', null=True)),
                ('published', models.BooleanField(default=False)),
                ('is_applicant', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
                ('position', models.ForeignKey(help_text='select the position you are applying for', on_delete=django.db.models.deletion.CASCADE, to='core.position')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Opportunity',
                'verbose_name_plural': 'Opportunities',
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Gallary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='core/gallary/image')),
                ('alt_text', models.CharField(default='image', help_text='enter an alternate text for this image', max_length=50)),
                ('url', models.URLField(blank=True, null=True)),
                ('published', models.BooleanField(default=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('update_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gallary',
                'verbose_name_plural': 'Gallaries',
                'ordering': ('-created_on',),
            },
        ),
    ]
